name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker-proxy-webhook

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Check format
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          echo "Please run 'gofmt -s -w .' to format your code."
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./docker-proxy-webhook/coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Build
      run: go build -v ./...

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (verification only)
      uses: docker/build-push-action@v6
      with:
        context: ./docker-proxy-webhook
        file: ./docker-proxy-webhook/Dockerfile
        push: false
        tags: docker-proxy-webhook:ci-test
        cache-from: type=gha
        cache-to: type=gha,mode=max
